/**
* DevExtreme (core/utils/type.d.ts)
* Version: 21.1.3
* Build date: Tue May 18 2021
*
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
*/
/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function type(object: any): string;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isBoolean<T>(object: T): object is Extract<T, boolean>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isDate<T>(object: T): object is Extract<T, Date>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isString<T>(object: T): object is Extract<T, string>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function type(object: any): 'object' | 'array' | 'string' | 'date' | 'null';

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isNumeric<T>(object: T): object is Extract<T, number>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isFunction<T>(object: T): object is Extract<T, Function>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isExponential<T>(object: T): object is Extract<T, number>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isDefined<T>(object: T): object is NonNullable<T>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isObject<T = {}>(object: unknown): object is Extract<T, object>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isEmptyObject<T = {}>(object: T): boolean;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isPlainObject<T>(object: T): object is Extract<T, object>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isPrimitive<T>(value: T): value is Exclude<T, Function>&Exclude<T, object>&Exclude<T, any[]>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isWindow<T>(object: T): object is Extract<T, Window & typeof globalThis>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isRenderer(object: any): boolean;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isPromise<T>(object: T): object is Extract<T, Promise<any>>;

/**
 * @deprecated Warning! This type is used for internal purposes. Do not import it directly.
 */
export declare function isDeferred(object: any): boolean;
